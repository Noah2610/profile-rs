[keywords]
# For single-line profile encapsulation
single = '/^\s*#\s*PROFILE\s*=\s*(?P<expr>)$/'
# The named capture group `expr` will be parsed as the expression,
# which evaluates to a boolean.
# Expression would be something like ...
#   desktop
#   !desktop && laptop
# Example in a config file ...
#   # PROFILE = desktop
#   set only-on-desktop

# For multi-line profile encapsulation
block_start = '/^\s*#\s*PROFILE_START\s*=\s*(?P<expr>)$/'
block_end = '/^\s*#\s*PROFILE_END\s*$/'
# Example in a config file ...
#   # PROFILE_START = !laptop && desktop
#   set not-on-laptop
#   set on-desktop-not-laptop
#   # PROFILE_END

[files]
# Default config files to run on, if no files were given as arguments
default = [
    "~/.bashrc",
    "@vim",
    "~/.config/i3/config",
]

# Aliases for filepaths. Can be used on the command-line or in the `default` key
# above, by prefixing strings with `@`
[files.aliases]
vim = ["~/.vimrc", "~/.config/nvim/init.vim"]
i3 = "~/.config/i3"

[profiles]
# By default, the machine's hostname is used as the profile.
# If the hostname appears as a key in this table (`profiles.hostnames`),
# then the associated value is used as the profile / profiles.
[profiles.hostnames]
# This should be redundant, as the hostname is the default profile
aware-desktop = "aware-desktop"
laptop = ["laptop", "onedisp"]
